name: Watch Upstream Commits

on:
  schedule:
    - cron: '43 1 * * *'
  workflow_dispatch:

permissions:
  issues: write
  contents: read

jobs:
  check-upstream-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest commit SHA from neodrama/github-drama
        id: get_commit
        run: |
          LATEST_SHA=$(curl -s https://api.github.com/repos/neodrama/github-drama/commits?per_page=1 | jq -r '.[0].sha // empty')
          echo "latest_sha=$LATEST_SHA" >> $GITHUB_OUTPUT

      - name: Get last seen SHA from tracker issue
        id: get_last_sha
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'Upstream Commit Tracker',
              per_page: 1
            });
            if (issues.length > 0) {
              const tracker = issues[0];
              const match = tracker.body && tracker.body.match(/Last seen SHA: ([a-f0-9]+)/);
              const lastSha = match ? match[1] : '';
              core.setOutput('last_sha', lastSha);
              core.setOutput('issue_number', tracker.number.toString());
            } else {
              core.setOutput('last_sha', '');
              core.setOutput('issue_number', '');
            }

      - name: Open issue if new commit
        if: ${{ steps.get_commit.outputs.latest_sha != '' && steps.get_commit.outputs.latest_sha != 'null' && (steps.get_last_sha.outputs.last_sha == '' || steps.get_commit.outputs.latest_sha != steps.get_last_sha.outputs.last_sha) }}
        uses: actions/github-script@v7
        env:
          LATEST_SHA: ${{ steps.get_commit.outputs.latest_sha }}
          LAST_SHA: ${{ steps.get_last_sha.outputs.last_sha }}
          ISSUE_NUMBER: ${{ steps.get_last_sha.outputs.issue_number }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const latestSha = process.env.LATEST_SHA || '';
            const lastSha = process.env.LAST_SHA || '';
            const issueNumber = process.env.ISSUE_NUMBER || '';
            if (!latestSha || latestSha === 'null') {
              console.log('No valid latest SHA found, skipping issue creation.');
              return;
            }
            // Open a new issue about the new commit
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Upstream SHA: ${latestSha}`,
              body: `A new commit (${latestSha}) was pushed to neodrama/github-drama.\n\nSee: https://github.com/neodrama/github-drama/commit/${latestSha}`
            });
            // Update or create the tracker issue
            // Only update or create the tracker issue if the SHA is valid
            if (latestSha && latestSha !== 'null' && latestSha !== '') {
              if (issueNumber && issueNumber !== 'undefined' && issueNumber !== '') {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: Number(issueNumber),
                  body: latestSha
                });
              } else {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: 'Upstream Commit Tracker',
                  body: latestSha
                });
              }
            } else {
              console.log('Not updating tracker issue because latest SHA is invalid.');
            }